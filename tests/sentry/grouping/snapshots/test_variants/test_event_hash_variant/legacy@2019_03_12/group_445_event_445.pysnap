---
created: '2021-03-29T21:59:08.043624Z'
creator: sentry
source: tests/sentry/grouping/test_variants.py
---
app:
  hash: null
  component:
    app (exception of system takes precedence)
      exception (ignored because hash matches system variant)
        stacktrace*
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "RtlUserThreadStart"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "BaseThreadInitThunk"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            filename*
              "exe_common.inl"
            function*
              "invoke_main"
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            filename*
              "WinMain.cpp"
            function*
              "wWinMain"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::{ctor}"
          frame (ignored by stack trace rule (category:internals -group))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::assign"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::assign"
          frame (ignored by stack trace rule (category:internals -group))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::_Reallocate_for"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "functional"
            function*
              "std::_Func_class<T>::operator()"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "DispatchMessageWorker"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "UserCallWinProcCheckWow"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "purevirt.cpp"
            function*
              "_purecall"
          frame (frame considered in-app because no frame is in-app)
            function (function name is not used if module or filename are available)
              "abort"
          frame (marked as prefix frame by stack trace rule (category:throw +sentinel +prefix ^-group))
            function (function name is not used if module or filename are available)
              "raise"
          frame (ignored by stack trace rule (category:throw +sentinel +prefix ^-group))
            filename*
              "crashpad_client_win.cc"
            function*
              "crashpad::`anonymous namespace'::HandleAbortSignal"
        type*
          "0x40000015 / 0x00000001"
        value (stacktrace and type take precedence)
          "Fatal Error: 0x40000015 / 0x00000001"
--------------------------------------------------------------------------
system:
  hash: "9be643d1ddb9d3b6218325ffbb084b03"
  component:
    system*
      exception*
        stacktrace*
          frame
            function (function name is not used if module or filename are available)
              "RtlUserThreadStart"
          frame
            function (function name is not used if module or filename are available)
              "BaseThreadInitThunk"
          frame
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            filename*
              "exe_common.inl"
            function*
              "invoke_main"
          frame (ignored by stack trace rule (category:threadbase -group v-group))
            filename*
              "WinMain.cpp"
            function*
              "wWinMain"
          frame* (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::{ctor}"
          frame (ignored by stack trace rule (category:internals -group))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::assign"
          frame (marked out of app by stack trace rule (family:native function:std::* -app))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::assign"
          frame (ignored by stack trace rule (category:internals -group))
            filename*
              "xstring"
            function*
              "std::basic_string<T>::_Reallocate_for"
          frame
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "functional"
            function*
              "std::_Func_class<T>::operator()"
          frame
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame
            function (function name is not used if module or filename are available)
              "DispatchMessageWorker"
          frame
            function (function name is not used if module or filename are available)
              "UserCallWinProcCheckWow"
          frame
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "function_template.hpp"
            function*
              "boost::function0<T>::operator()"
          frame
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored due to recursion)
            function (function name is not used if module or filename are available)
              "stripped_application_code"
          frame (ignored by stack trace rule (category:indirection -group))
            filename*
              "purevirt.cpp"
            function*
              "_purecall"
          frame
            function (function name is not used if module or filename are available)
              "abort"
          frame (marked as prefix frame by stack trace rule (category:throw +sentinel +prefix ^-group))
            function (function name is not used if module or filename are available)
              "raise"
          frame (ignored by stack trace rule (category:throw +sentinel +prefix ^-group))
            filename*
              "crashpad_client_win.cc"
            function*
              "crashpad::`anonymous namespace'::HandleAbortSignal"
        type*
          "0x40000015 / 0x00000001"
        value (stacktrace and type take precedence)
          "Fatal Error: 0x40000015 / 0x00000001"
